awk ' # gen.key
#   Input: string (tab) [opt explicit key] (tab) numlist
#   Output: sort key (tab) string (tab) numlist
BEGIN { FS = OFS = "\t" }
$2 == "" { # generate key if none specified
	$2 = $1
	# Remove these troff commands:
	gsub(/\\f\(..|\\f.|\\s[+-][0-9]|\\s[0-9][0-9]?/, "", $2)
	# Def 1: keep blanks, letters, digits only
	#
	gsub(/[^a-zA-Z0-9 ]+/, "", $2)
	# Def 2: remove index commands []{}, and % before literals
	# quote character is %, space character is ~
	quoted = 0
	if ($2 ~ /%/) { # hide literals in Q
		quoted = 1
		gsub(/%%/, "QQ0QQ", $2)
		gsub(/%\[/, "QQ1QQ", $2)
		gsub(/%\]/, "QQ2QQ", $2)
		gsub(/%\{/, "QQ3QQ", $2)
		gsub(/%\}/, "QQ4QQ", $2)
		gsub(/%~/, "QQ5QQ", $2)
	}
	gsub(/%e/, "\\", $2)
	# troff escape
	gsub(/~/, " ", $2)
	gsub(/[%\[\]\{\}]/, "", $2)
	# remove font-changing []{} and %, ~
	if (quoted) { # replace literals
		gsub(/QQ0QQ/, "%", $2)
		gsub(/QQ1QQ/, "[", $2)
		gsub(/QQ2QQ/, "]", $2)
		gsub(/QQ3QQ/, "{", $2)
		gsub(/QQ4QQ/, "}", $2)
		gsub(/QQ5QQ/, "~", $2)
	}
	if ($2 ~ /^[^a-zA-Z]+$/) # pure punctuation goes first
		$2 = " " $2
	else if ($2 ~ /^[0-9]/) # leading digits come next
		$2 = " " $2
	# otherwise whatever final.sort does
}
{ print $2, $1, $3 }
' $*
